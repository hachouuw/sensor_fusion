// working code for slider only + pygame

unsigned long timer = 0;
long loopTime = 10000;   // microseconds
const int analogInPin = A2;

void setup() {
  Serial.begin(115200);
  timer = micros();
}

void loop() {
  timeSync(loopTime);
  //int val = analogRead(analogInPin) - 512;
  double val = (analogRead(analogInPin) -512) / 512.0;
  sendToPC(&val);
}

void timeSync(unsigned long deltaT)
{
  unsigned long currTime = micros();
  long timeToDelay = deltaT - (currTime - timer);
  if (timeToDelay > 5000)
  {
    delay(timeToDelay / 1000);
    delayMicroseconds(timeToDelay % 1000);
  }
  else if (timeToDelay > 0)
  {
    delayMicroseconds(timeToDelay);
  }
  else
  {
      // timeToDelay is negative so we start immediately
  }
  timer = currTime + timeToDelay;
}

//void sendToPC(int* data)
//{
//  byte* byteData = (byte*)(data);
//  Serial.write(byteData, 2);
//}

void sendToPC(double* data)
{
  byte* byteData = (byte*)(data);
  Serial.write(byteData, 4);
}

///*
//sliderUSBOut()
//When serial is available, the arduino will print a time stamp and 12-bit potentiometer position at the sampling rate.
//Eatai Roth, 2017
//*/
//
//const int analogInPin = A2;  // Analog input pin that the potentiometer is attached to
//
////unsigned int sensorValue;        // value read from the pot
//float startTime;
//union{float asFloat; byte asBytes[4];}t;
//union{float asFloat; byte asBytes[4];}sensorValue;
//char serInput;
//
//void setup() {
//  // initialize serial communications:
//  Serial.begin(115200);
//  while(!Serial);
//  
////  analogReadResolution(12);
//
//  startTime = micros();
//  t.asFloat = 0;
//}
//
//void loop() {
//  if (Serial.available()){
//    serInput = Serial.read();
//    // If read value is 'g', serial is expecting Data to be written
//    if (serInput == 0x67){
//      t.asFloat = (micros()-startTime)/1000000.0; 
////      sensorValue.asFloat = analogRead(analogInPin);
//      sensorValue.asFloat = 300.0;
////      Serial.write(t.asBytes,4);
//      Serial.write(sensorValue.asBytes,4);
//
////      Serial.println(t.asFloat);
////      Serial.println(sensorValue.asFloat);
////      Serial.println(analogRead(analogInPin));
//    }
//  
//
//    // If read value is 'a', restart timer
//    else if (serInput == 0x61){
//      clearUSBRecBuffer();
//      startTime = micros();
//    }
//  }
//}
//
//void clearUSBRecBuffer(){
//  while(Serial.available()){
//    Serial.read();
//  }
//}